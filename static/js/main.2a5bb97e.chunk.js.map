{"version":3,"sources":["Redux/dialogs-reducer.js","utils/objects-helpers.js","Redux/users-reducer.js","API/api.js","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Header/Header.module.css","components/common/preloader/preloader.js","Redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","age","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","getUsers","page","dispatch","a","toggleIsFetching","setCurrentPage","usersAPI","data","setUsers","setTotalUsersCount","totalCount","followUnfollowFlow","userId","apiMethod","actionCreator","toggleFollowingProgress","resultCode","follow","following","bind","followSuccess","unfollow","unFollowing","unfollowSuccess","count","usersReducer","followed","filter","instance","axios","withCredentials","headers","baseURL","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","isAuth","authLogout","header","alt","src","loginBlock","onClick","getAuthUserData","setAuthUserData","payload","authReducer","HeaderContainer","this","props","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","styles","formSummaryError","authLogin","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddlewear","DialogsContainer","lazy","UsersContainer","ProfileContainer","Music","News","Settings","App","initializeApp","fallback","path","render","AppContainer","compose","withRouter","promise","Promise","all","MainApp","basename","process","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Textarea","input","meta","hasError","touched","formControl","placeholder","component","validator","text","validate","value","maxLengthCreator","maxLength","minLengthCreator","minLength","Preloader","preloader","posts","LikeCount","profile","getUserProfile","setUserProfile","getUserStatus","setStatus","updateUserStatus","addPostCreator","newPostText","newPost","p","postId"],"mappings":"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","file":"static/js/main.2a5bb97e.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Alex', age: 24},\r\n        {id: 2, name: 'Svetlana', age: 25},\r\n        {id: 3, name: 'Sergey', age: 26},\r\n        {id: 4, name: 'Viktor', age: 27},\r\n        {id: 5, name: 'Maxim', age: 24},\r\n        {id: 6, name: 'Valera', age: 23},\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'What are you doing'},\r\n        {id: 3, message: 'I love you'}\r\n    ],\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    'id',\r\n                    {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(\r\n                    state.users,\r\n                    action.userId,\r\n                    'id',\r\n                    {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId\r\n                    )\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.following.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollowing.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport default usersReducer","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'ce1bac62-f4a8-400f-9300-57bf752b26a9'},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n// const musInstance = axios.create({\r\n//     withCredentials: false,\r\n//     baseURL: 'https://soundcloudstefan-skliarovv1.p.rapidapi.com/',\r\n//     clientId: 'x8fr50ws0l11',\r\n//     xrapidapihost:'Soundcloudstefan-skliarovV1.p.rapidapi.com',\r\n//     xrapidapikey:'7c8b6187a1msha2b846e24479a4dp1c6e66jsn291ce58ca759',\r\n// })\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        //запрос пользователей с сервера\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => response.data)\r\n    },\r\n    following (userId) {\r\n        return instance.post(\r\n            `follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    unFollowing (userId) {\r\n        return instance.delete(\r\n            `follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)}\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(\r\n            `profile/` + userId\r\n        )},\r\n    getStatus (userId) {\r\n        return instance.get(\r\n            `profile/status/` + userId\r\n        )},\r\n    updateStatus (status) {\r\n        return instance.put(\r\n            `profile/status`, {status: status}\r\n        )},\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(\r\n            `auth/me`)\r\n    },\r\n\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(\r\n            `auth/login`, { email, password, rememberMe })\r\n    },\r\n\r\n    logout () {\r\n        return instance.delete(\r\n            `auth/login`)\r\n    },\r\n};\r\n\r\n// export const musicAPI = {\r\n//     search () {\r\n//         return musInstance.post(\r\n//             `searchTracks`\r\n//         )\r\n//     }\r\n// }\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2DL9u\",\"item\":\"Navbar_item__1ujA3\",\"activeLink\":\"Navbar_activeLink__shGuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1HbzO\",\"error\":\"FormsControls_error__1dmJV\",\"formSummaryError\":\"FormsControls_formSummaryError__y5sh_\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = ({login, isAuth, authLogout}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='img'\r\n                 src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Facebook_Logo_%282019%29.png/1024px-Facebook_Logo_%282019%29.png\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                { isAuth\r\n                    ? <div>{login} - <button onClick={authLogout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const authLogin = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const authLogout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}});\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogout, getAuthUserData} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, authLogout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogin} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('email',\r\n                'Email',\r\n                Input,\r\n                [required],\r\n                null)}\r\n            {createField('password',\r\n                'Password',\r\n                Input,\r\n                [required],\r\n                'Password')}\r\n            {createField('rememberMe',\r\n                null,\r\n                Input,\r\n                null,\r\n                'checkbox',\r\n                'remember me')}\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.authLogin(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {authLogin})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () =>\r\n    ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess());\r\n            })\r\n    }\r\n\r\nexport default appReducer","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlewear from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\nimport musicReducer from \"./music-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    // music: musicReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddlewear));\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/preloader\";\nimport {compose} from \"redux\";\nimport store from \"./Redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Music = React.lazy(() => import('./components/Music/MusicContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Suspense fallback={<div>Loading...</div>}>\n                    <Route path='/profile/:userId?' render={() =>\n                        <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() =>\n                        <DialogsContainer/>}/>\n                    <Route path='/news' render={() =>\n                        <News/>}/>\n                    <Route path='/music' render={() =>\n                        <Music/>}/>\n                    <Route path='/settings' render={() =>\n                        <Settings/>}/>\n                    <Route path='/users' render={() =>\n                        <UsersContainer/>}/>\n                    <Route path='/login' render={() =>\n                        <Login/>}/>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nlet MainApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\nexport default MainApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n                    <MainApp />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError &&\r\n            <span className={styles.error}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError &&\r\n            <span className={styles.error}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (name, placeholder, component, validator, type, text='') => (\r\n    <div>\r\n        <Field name={name}\r\n               placeholder={placeholder}\r\n               component={component}\r\n               validate={validator}\r\n               type={type}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return (`Max length is ${maxLength} symbols`);\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Minimum length is ${minLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3s_op\",\"loginBlock\":\"Header_loginBlock__h2dHq\"};","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img alt={'img'} src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', LikeCount: 12},\r\n        {id: 2, message: 'This is my first message!', LikeCount: 11},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                LikeCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [state.posts.filter(p => p.id !== action.postId)],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n};\r\n\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\n\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) =>\r\n    ({type: SET_USER_PROFILE, profile});\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}