{"version":3,"sources":["HOC/WithAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","className","s","message","DialogItem","path","id","dialog","active","name","age","maxLength","maxLengthCreator","minLength","minLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","messages","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","m","dialogsItem","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"8MAKIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAQtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCjB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCQlMC,EANC,SAACN,GACb,OACI,yBAAKO,UAAWC,IAAEC,SAAUT,EAAMS,U,QCQ3BC,EATI,SAACV,GAChB,IAAIW,EAAO,YAAcX,EAAMY,GAC/B,OACI,yBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,QAC/B,kBAAC,IAAD,CAASb,GAAIU,GAAOX,EAAMe,KAA1B,IAAiCf,EAAMgB,O,yCCyB7CC,EAAYC,YAAiB,IAC7BC,EAAYC,YAAiB,GAmB7BC,EAAsBC,YAAW,CACnCC,KAAM,kBADkBD,EAjBL,SAACtB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,aAAclB,UAAWC,IAAEkB,UACzC,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXd,KAAM,iBACNe,YAAa,qBACbC,SAAU,CAACC,IAAUf,EAAWE,MAExC,6BACI,6CAULc,EAhDC,SAACjC,GAEb,IAAIP,EAAQO,EAAMkC,YACdC,EAAkB1C,EAAM2C,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,GAAII,IAAKsB,EAAEtB,SAC/FwB,EAAmB/C,EAAMiC,SAASW,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAShC,QAASgC,EAAEhC,QAAS8B,IAAKE,EAAE7B,QAMnF,OAAKZ,EAAMN,OAIP,yBAAKa,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEkC,aACbP,GAEL,yBAAK5B,UAAWC,IAAEkB,UAAWc,GAC7B,kBAACnB,EAAD,CAAqBG,SAbT,SAACmB,GACjB3C,EAAM4C,YAAYD,EAAOE,oBAIlB,kBAAC,IAAD,CAAU5C,GAAI,Y,wBCCd6C,sBACX3C,aAdkB,SAACV,GACnB,MAAO,CACHyC,YAAazC,EAAMyC,gBAGF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpCjD,IAFWkD,CAGbb","file":"static/js/5.0084e022.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3C6UC\",\"dialogsItem\":\"Dialogs_dialogsItem__3JliL\",\"active\":\"Dialogs_active__2rixW\",\"dialog\":\"Dialogs_dialog__uAAO-\",\"messages\":\"Dialogs_messages__9ENby\",\"message\":\"Dialogs_message__3W6xW\"};","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name} {props.age}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} age={d.age}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth)\r\n        return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>{messagesElements}</div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(20);\r\nconst minLength = minLengthCreator(2);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messages}>\r\n                <div>\r\n                    <Field\r\n                        component={Textarea}\r\n                        name={'newMessageBody'}\r\n                        placeholder={'Enter your message'}\r\n                        validate={[required, maxLength, minLength]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm ({\r\n    form: 'addMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// Функции для настройки connect\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}