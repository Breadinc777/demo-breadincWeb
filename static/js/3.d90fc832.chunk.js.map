{"version":3,"sources":["HOC/WithAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/user.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/profileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusBar","onClick","onBlur","updateUserStatus","autoFocus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","styles","formSummaryError","createField","Input","Textarea","keys","contacts","map","key","contact","ProfileData","isOwner","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","alt","src","photos","large","userPhoto","avatar","type","target","files","initialValues","formData","then","Post","item","message","like","likeCount","MyPosts","memo","postsElements","posts","reverse","p","id","LikeCount","postsBlock","AddPostReduxForm","values","addPost","newPostText","maxLength","maxLengthCreator","minLength","minLengthCreator","Field","placeholder","component","name","validate","required","MyPostsContainer","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.d90fc832.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/user.1897f975.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2JH-O\",\"avatar\":\"ProfileInfo_avatar__3uaml\",\"contacts\":\"ProfileInfo_contacts__AfsYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"profileStatus_statusBar__3x-mi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__21x7q\",\"posts\":\"MyPosts_posts__5Pr6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2c51z\",\"like\":\"Post_like__3R7Gt\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './profileStatus.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBar}>\r\n            {!editMode && <div>\r\n                        <span\r\n                            onClick={activateEditMode}>{props.status || 'No status'}\r\n                        </span>\r\n            </div>}\r\n            {editMode && <div>\r\n                <input onBlur={deactivateEditMode}\r\n                       autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       value={status}></input>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save\r\n            </button>\r\n        </div>\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div><b>Имя: </b> {createField('fullName', 'Ваше имя', Input, [], null, null)}\r\n        </div>\r\n        <div>\r\n            <b>В поиске работы: </b> {createField('lookingForAJob', null, Input, [], 'checkbox', null)}\r\n        </div>\r\n        <div><b>Мои навыки: </b> {createField('lookingForAJobDescription', 'Ваши навыки', Textarea, [], null, null)}\r\n        </div>\r\n        <div>\r\n            <b>Обо мне: </b> {createField('aboutMe', 'Обо мне', Textarea, [], null, null)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Контакты: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>\r\n                    {key}: {createField('contacts.' + key, key, Input, [], null, null)}\r\n                </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n\r\n                <img alt='' src={profile.photos.large || userPhoto} className={s.avatar}/>\r\n                {isOwner && <input type={'file'} onChange={mainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                            setEditMode={setEditMode}/>\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   toEditMode={() => setEditMode(true)}/>}\r\n\r\n                <div>\r\n                    <b>Status: </b> <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={toEditMode}>edit</button>\r\n        </div>}\r\n        <div><b>Nickname: </b>{profile.fullName}</div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob && <div>{profile.lookingForAJobDescription}</div>}\r\n\r\n        {profile.aboutMe &&\r\n        <div>\r\n            <b>About Me: </b> {profile.aboutMe}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://tvbesedka.com/upload/2018/8/17/0/14/28/32634856-ec7c-4ef2-9d04-c1a2325dac76.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span className={s.like}> Likes </span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message}\r\n                        key={p.id}\r\n                        likeCount={p.LikeCount}/>)\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>Мои публикации</h3>\r\n            <AddPostReduxForm onSubmit={AddNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength = maxLengthCreator(20);\r\nconst minLength = minLengthCreator(2);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Type your message'}\r\n                       component={Textarea}\r\n                       name={'newPostText'}\r\n                       validate={[required, maxLength, minLength]}/>\r\n                <div>\r\n                    <button>Опубликовать</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'addPostForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         isOwner={props.isOwner}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus, savePhoto, saveProfile,\r\n    updateUserStatus\r\n} from '../../Redux/profile-reducer';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}